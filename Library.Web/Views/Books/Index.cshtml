@using Library.Web.Models
@using PagedList.Mvc;
@model IndexBooksViewModel

@{
    ViewBag.Title = "Books";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Add book", "Create")
</p>

@using (Html.BeginForm("Index", "Books", FormMethod.Get))
{
    <p>
        Find by name: @Html.TextBox("Filter", Model.Filter as string)
        @Html.Hidden("Page", 1)
        @Html.HiddenFor(m => m.Sort)

        <input type="submit" value="Search" />
    </p>
}
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Name", "Index", new { sort = String.IsNullOrEmpty(Model.Sort) ? "name_desc" : "", filter = Model.Filter, page = Model.Page })
        </th>
        <th>
            Pages
        </th>
        <th>
            @Html.ActionLink("Publishing date", "Index", new { sort = Model.Sort == "date_asc" ? "date_desc" : "date_asc", filter = Model.Filter, page = Model.Page })
        </th>
        <th>
            Publishing house
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.Books)
    {
        <tr>
            <td>
                @item.Name
            </td>
            <td>
                @item.Pages
            </td>
            <td>
                @item.PublishingDate
            </td>
            <td>
                @item.PublishingHouse
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }

</table>
<br />

Page @(Model.Books.PageCount < Model.Books.PageNumber ? 0 : Model.Books.PageNumber) of @Model.Books.PageCount

@Html.PagedListPager(Model.Books, page => Url.Action("Index",
    new { sort = Model.Sort, filter = Model.Filter, page }))